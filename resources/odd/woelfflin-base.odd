<TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:pb="http://teipublisher.com/1.0" xml:lang="en"><teiHeader><fileDesc>
            <titleStmt><title>WÃ¶lfflin - Base ODD</title></titleStmt>
            <publicationStmt>
                <publisher>eXistSolutions GmbH</publisher>
                <availability>
                    <licence target="https://www.gnu.org/licenses/gpl-3.0.en.html">Distributed under GNU General Public License</licence>
                    <p>Copyright 2017 <ref target="http://existsolutions.com">eXistSolutions GmbH</ref>
                    </p>
                    <p>This program is free software: you can redistribute it and/or modify
                        it under the terms of the GNU General Public License as published by
                        the Free Software Foundation, either version 3 of the License, or
                        (at your option) any later version.</p>
                    <p>This program is distributed in the hope that it will be useful,
                        but WITHOUT ANY WARRANTY; without even the implied warranty of
                        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                        GNU General Public License for more details.</p>
                </availability>
            </publicationStmt>
            <sourceDesc>
                <p>Generated by <ref target="http://tei-publisher.com">TEI Publisher</ref>
                </p>
                <p>born digital</p>
            </sourceDesc>
        </fileDesc><encodingDesc><tagsDecl><rendition source="../css/dynamic-content.css"/></tagsDecl></encodingDesc><revisionDesc>
            <change when="2020-04-27+17:00">Initial version</change>
        </revisionDesc></teiHeader><text>
        <body>

            <schemaSpec start="TEI teiCorpus" ident="woelfflin" source="teipublisher.odd">
            
                <elementSpec ident="teiHeader" mode="change"><model predicate="$parameters?mode='ednotiz'" behaviour="block">
            <param name="content" value=".//physDesc | .//notesStmt | .//editorialDecl"/>
        </model><model output="latex" behaviour="inline">
            <param name="content" value="(fileDesc/titleStmt/title[not(@type)])"/>
            <pb:template xmlns="" xml:space="preserve">\def\volume{[[content]]}</pb:template>
        </model><model output="fo" behaviour="omit"/><model output="web" predicate="$parameters?header='short'" behaviour="block"/><model output="web" behaviour="metadata"/></elementSpec>
                
                <elementSpec ident="pb" mode="change"><modelSequence>
            <desc>Default behaviour for the pagebreaks of the new printed edition.</desc>
            <model predicate="$parameters?view='page'" behaviour="inline">
                <desc>Pagenumber for HTML metadata title in page view.</desc>
                <param name="pnum" value="@n"/>
                <param name="volume" value="root($parameters?root)//teiHeader//titleStmt/title[@level=&#34;m&#34;]/string()"/>
                <pb:template xmlns="" xml:space="preserve">
                                <span class="pagetitle">[[volume]]: S. [[pnum]]</span>
                            </pb:template>
                <outputRendition xml:space="preserve">
                display: none;
                </outputRendition>
            </model>
            <model behaviour="inline" cssClass="hw-float-column hw-modern-pb hw-float-pb">
                <desc>Indicate the page number on the right side in a floating element.</desc>
                <param name="pb-alt" value="concat(root($parameters?root)//teiHeader//seriesStmt, ', S. ', @n, '.')"/>
                <param name="id" value="@xml:id"/>
                <param name="pb" value="concat(@ed,' : S. ', @n)"/>
                <pb:template xmlns="" xml:space="preserve"><pb-popover id="altref_19"><span slot="default" id="[[id]]">[[pb]]</span><template slot="alternate" id="[[id]]"><div class="hw-pb-modern">
                            [[pb-alt]]</div></template></pb-popover></pb:template>
            </model>
            <model predicate="not($parameters?view='page') and not(ancestor::divGen)" behaviour="inline" cssClass="hw-modern-pb hw-inline-pb hw-inline-pb">
                <desc>Indicate the exact page break inside the text with a pipe.</desc>
                <param name="pb" value="concat(@ed,' : S. ',@n)"/>
                <param name="id" value="@xml:id"/>
                <pb:template xmlns="" xml:space="preserve"><pb-popover class="alternate tei-pb4 hw-modern-pb" id="altref_30"><span slot="default" id="[[id]]">| </span><template slot="alternate" id="[[id]]"><div class="hw-pb-modern">[[pb]]</div></template></pb-popover></pb:template>
            </model>
        </modelSequence></elementSpec>
                
                <elementSpec ident="p" mode="change"><modelSequence>
            <model behaviour="index">
                <param name="type" value="'toc'"/>
            </model>
            <model behaviour="block" cssClass="p-indent" useSourceRendition="true">
                <outputRendition xml:space="preserve">
                
                </outputRendition>
            </model>
        </modelSequence></elementSpec>

                <elementSpec ident="ref" mode="change"><model predicate="starts-with(@target, 'http')" behaviour="link" cssClass="hw-external-link">
            <desc>This behaviour defines the IIIF manifest link below the images.</desc>
            <param name="uri" value="@target"/>
        </model><model predicate="@type='modern-page'" behaviour="link" cssClass="hw-internal-link">
            <desc>Link to page according to modern edition</desc>
            <param name="uri" value="concat('../resolver.html', @target)"/>
            <outputRendition xml:space="preserve">
            text-decoration: none;
            </outputRendition>
        </model><model predicate="@type='note'" behaviour="webcomponent" cssClass="hw-internal-link">
            <desc>Note in apparatus</desc>
            <param name="name" value="'pb-link'"/>
            <param name="emit" value="'transcription'"/>
            <param name="xml-id" value="substring-after(@target, '#')"/>
            <outputRendition xml:space="preserve">
            text-decoration: none;
            </outputRendition>
        </model><model predicate="@type='document'" behaviour="webcomponent" cssClass="hw-internal-link">
            <desc>Link to document</desc>
            <param name="name" value="'pb-link'"/>
            <param name="emit" value="'transcription'"/>
            <param name="xml-id" value="substring-after(@target, '#')"/>
            <outputRendition xml:space="preserve">
            text-decoration: none;
            </outputRendition>
        </model><model predicate="@type='page'" behaviour="webcomponent" cssClass="hw-internal-link">
            <desc>Base to overwrite</desc>
            <param name="name" value="'pb-link'"/>
            <param name="emit" value="'transcription'"/>
            <param name="xml-id" value="substring-after(@target, '#')"/>
        </model><model predicate="@type='chapter' and contains(@target, 'ch')" behaviour="webcomponent" cssClass="hw-internal-link">
            <desc>Link to chapter in same document. To overwrite</desc>
            <param name="name" value="'pb-link'"/>
            <param name="emit" value="'transcription'"/>
            <param name="xml-id" value="substring-after(@target, '#')"/>
            <outputRendition xml:space="preserve">
            text-decoration: none;
            </outputRendition>
        </model><model predicate="@type='chapter'" behaviour="link" cssClass="hw-internal-link">
            <desc>Link to chapter anywhere</desc>
            <param name="uri" value="concat('../resolver.html', @target)"/>
            <outputRendition xml:space="preserve">
            text-decoration: none;
            </outputRendition>
        </model><model predicate="@type='comment' and contains(@target, 'comment')" behaviour="webcomponent" cssClass="hw-internal-link">
            <desc>Comment in the same part. To overwrite</desc>
            <param name="name" value="'pb-link'"/>
            <param name="emit" value="'transcription'"/>
            <param name="xml-id" value="substring-after(@target, '#')"/>
            <outputRendition xml:space="preserve">
            text-decoration: none;
            </outputRendition>
        </model><model predicate="@type='comment'" behaviour="link" cssClass="hw-internal-link">
            <desc>Comment anywhere</desc>
            <param name="uri" value="concat('../resolver.html', @target)"/>
            <outputRendition xml:space="preserve">
            text-decoration: none;
            </outputRendition>
        </model><model predicate="@type='footnote'" behaviour="webcomponent" cssClass="hw-internal-link">
            <param name="name" value="'pb-link'"/>
            <param name="emit" value="'transcription'"/>
            <param name="xml-id" value="substring-after(@target, '#')"/>
            <outputRendition xml:space="preserve">
            text-decoration: none;
            </outputRendition>
        </model><model behaviour="webcomponent" cssClass="hw-internal-link">
            <param name="name" value="'pb-link'"/>
            <param name="xml-id" value="substring-after(@target, '#')"/>
            <param name="emit" value="'transcription'"/>
            <outputRendition xml:space="preserve">
            display: inline;
            </outputRendition>
        </model><model predicate="not(@target)" behaviour="inline"/><model predicate="not(text())" behaviour="link">
            <param name="content" value="null"/>
            <param name="link" value="null"/>
        </model></elementSpec>
                
                <elementSpec ident="quote" mode="change"><model predicate="ancestor::p" behaviour="inline" useSourceRendition="true">
            <desc>If it is inside a paragraph then it is inline, otherwise it is block
                                        level</desc>
            <outputRendition xml:space="preserve" scope="before">
            content: 'â';
            </outputRendition>
            <outputRendition xml:space="preserve" scope="after">
            content: 'â';
            </outputRendition>
        </model><model behaviour="cit" cssClass="hw-quote-block" useSourceRendition="true">
            <desc>If it is inside a paragraph then it is inline, otherwise it is block
                                        level</desc>
            <outputRendition xml:space="preserve">
            padding: 1em 0 1em 2em;
            </outputRendition>
        </model></elementSpec>
                
                <elementSpec ident="head" mode="change"><model predicate="$parameters?mode='toc'" behaviour="inline">
            <param name="content" value="replace(string-join(.//text()[not(parent::ref)][not(ancestor::note)]), '^(.*?)[^\w]*$', '$1')"/>
        </model><model predicate="$parameters?header='short'" behaviour="inline">
            <param name="content" value="replace(string-join(.//text()[not(parent::ref)]), '^(.*?)[^\w]*$', '$1')"/>
        </model><model predicate="parent::figure" behaviour="inline"/><model predicate="parent::table" behaviour="block">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model><model predicate="parent::lg" behaviour="block">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model><model predicate="parent::list" behaviour="block">
            <outputRendition xml:space="preserve">
            font-weight: bold;
            </outputRendition>
        </model><model predicate="parent::div" behaviour="heading" useSourceRendition="true">
            <param name="level" value="count(ancestor::div)"/>
        </model><model predicate="parent::div3" behaviour="heading">
            <param name="level" value="3"/>
        </model><model behaviour="block"/></elementSpec>
                
                <elementSpec ident="seg" mode="change"><model predicate="$parameters?mode='toc'" behaviour="inline">
            <desc>Remove styles from title lines for the table of contents</desc>
        </model><model predicate="@type = 'tab'" behaviour="inline">
            <desc>E.g. tabbed page numbers in a table of contents.</desc>
            <outputRendition xml:space="preserve">
            display: block; margin-left: 4pt; float: right;
            </outputRendition>
        </model><model behaviour="inline" useSourceRendition="true"/></elementSpec>
                
                <elementSpec ident="ab" mode="change"><model behaviour="block" useSourceRendition="true"/></elementSpec>
                
                <elementSpec ident="epigraph" mode="change"><model behaviour="block" useSourceRendition="true"/></elementSpec>
                
                <elementSpec ident="dateline" mode="change"><model behaviour="block" useSourceRendition="true"/></elementSpec>
                
                <elementSpec ident="signed" mode="change"><model behaviour="block" useSourceRendition="true"/></elementSpec>

                <elementSpec ident="item" mode="change"><model predicate="parent::list[@type='gloss']" behaviour="pass-through">
            <param name="content" value="node()"/>
            <pb:template xmlns="" xml:space="preserve"><dd>[[content]]</dd></pb:template>
        </model><model predicate="@rend='list-stroke'" behaviour="listItem">
            <outputRendition xml:space="preserve" scope="before">
            content: 'â '; width: 1em;
            </outputRendition>
            <outputRendition xml:space="preserve">
            text-indent: -1em;
            </outputRendition>
        </model><model predicate="parent::list[@rend='hanging']" behaviour="listItem" cssClass="hw-hanging-list-indent">
            <outputRendition xml:space="preserve">
            padding-left: 1em; text-indent: -1em;
            </outputRendition>
        </model><model predicate="parent::list[@rend='plain']" behaviour="listItem">
            <outputRendition xml:space="preserve">
            
            </outputRendition>
        </model><model behaviour="listItem" useSourceRendition="true">
            <outputRendition xml:space="preserve">
            clear: both;
            </outputRendition>
        </model></elementSpec>
         
                <elementSpec ident="bibl" mode="change"><model predicate="@type=&#34;full&#34;" behaviour="inline" cssClass="hw-annotation-dropdown-content">
            <param name="link" value="concat(&#34;../register.xml#&#34;, parent::bibl/@xml:id)"/>
            <param name="desc" value="node()"/>
            <pb:template xmlns="" xml:space="preserve">                            <p>[[desc]]</p>
                            <p><a href="[[link]]" class="hw-internal-link">Index</a></p>
                        </pb:template>
        </model><model predicate="parent::listBibl" behaviour="inline" cssClass="hw-annotation-dropdown-content">
            <param name="link" value="concat(&#34;../register.xml#&#34;, parent::bibl/@xml:id)"/>
            <param name="desc" value="bibl[@type='full']/node()"/>
            <param name="name" value="title[@type='short']/node()"/>
            <pb:template xmlns="" xml:space="preserve">                            <p><strong>[[name]]</strong></p>
                            <p>[[desc]]</p>
                            <p><a href="[[link]]" class="hw-internal-link">Index</a></p></pb:template>
        </model><model predicate="@corresp" behaviour="alternate" cssClass="hw-bibl hw-bibl-toggle">
            <param name="default" value="."/>
            <param name="alternate" value="id(@corresp, doc($global:data-root || '/register.xml'))/bibl[@type='full']"/>
            <param name="persistent" value="true()"/>
        </model></elementSpec>
                
                <elementSpec ident="hi" mode="change"><model predicate="$parameters?mode='kommentar' and @rendition='#HW_emphasis'" behaviour="inline">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model><model predicate="@rendition" behaviour="inline" useSourceRendition="true"/><model predicate="not(@rendition)" behaviour="inline">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model></elementSpec>
                
                <elementSpec ident="titlePage" mode="change"/>

                <elementSpec ident="title" mode="change"><model predicate="$parameters?header='short'" behaviour="block"/><model predicate="@type='short'" behaviour="heading"/><modelSequence predicate="parent::titleStmt/parent::fileDesc">
            <model predicate="preceding-sibling::title" behaviour="text">
                <param name="content" value="' â '"/>
            </model>
            <model behaviour="inline"/>
        </modelSequence><model predicate="not(@level) and parent::bibl" behaviour="inline"/><modelSequence predicate="@level='m' or not(@level)">
            <model behaviour="inline">
                <outputRendition xml:space="preserve">
                font-style: italic;
                </outputRendition>
            </model>
            <model predicate="ancestor::biblFull" behaviour="text">
                <param name="content" value="', '"/>
            </model>
        </modelSequence><modelSequence predicate="@level='s' or @level='j'">
            <model behaviour="inline">
                <outputRendition xml:space="preserve">
                font-style: italic;
                </outputRendition>
            </model>
            <model predicate="following-sibling::* and     (  ancestor::biblFull)" behaviour="text">
                <param name="content" value="', '"/>
            </model>
        </modelSequence><modelSequence predicate="@level='u' or @level='a'">
            <model behaviour="inline">
                <outputRendition xml:space="preserve">
                font-style: italic;
                </outputRendition>
            </model>
            <model predicate="following-sibling::* and     (    ancestor::biblFull)" behaviour="text">
                <param name="content" value="'. '"/>
            </model>
        </modelSequence><model behaviour="inline">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model></elementSpec>

                <elementSpec ident="emph" mode="add"><model behaviour="inline">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model></elementSpec>

                <elementSpec ident="lg" mode="change"><model behaviour="block">
            <outputRendition xml:space="preserve">
            padding: 6px 0;
            </outputRendition>
        </model></elementSpec>
                
                <elementSpec ident="l" mode="change"><model behaviour="block" useSourceRendition="true">
            <outputRendition xml:space="preserve">
            
            </outputRendition>
        </model></elementSpec>

                <elementSpec ident="rs" mode="change"><model predicate="$parameters?mode='toc'" behaviour="inline">
            <outputRendition xml:space="preserve">
            background-color:yellow;
            </outputRendition>
        </model><model predicate="@type=&#34;person&#34; and parent::bibl and $parameters?biblMode=&#34;full&#34;" behaviour="inline">
            <desc>Hide person annotations in bibliographic links when those are highlighted.</desc>
        </model><model predicate="@type=&#34;person&#34; and @ref=preceding-sibling::rs/@ref" behaviour="alternate" cssClass="hw-person hw-person-toggle-other">
            <param name="default" value="."/>
            <param name="alternate" value="id(@ref, doc($global:data-root || '/register.xml'))"/>
            <param name="persistent" value="true()"/>
        </model><model predicate="@type=&#34;person&#34;" behaviour="alternate" cssClass="hw-person hw-person-toggle-first">
            <param name="default" value="."/>
            <param name="persistent" value="true()"/>
            <param name="alternate" value="id(@ref, doc($global:data-root || '/register.xml'))"/>
        </model><model predicate="@type=&#34;organisation&#34; and @ref=preceding-sibling::rs/@ref" behaviour="alternate" cssClass="hw-organisation hw-organisation-toggle-other">
            <param name="default" value="."/>
            <param name="alternate" value="id(@ref, doc($global:data-root || '/register.xml'))"/>
            <param name="persistent" value="true()"/>
        </model><model predicate="@type=&#34;organisation&#34;" behaviour="alternate" cssClass="hw-organisation hw-organisation-toggle-first">
            <param name="default" value="."/>
            <param name="alternate" value="id(@ref, doc($global:data-root || '/register.xml'))"/>
            <param name="persistent" value="true()"/>
        </model><model predicate="@type=&#34;object&#34; and @ref=preceding-sibling::rs/@ref" behaviour="alternate" cssClass="hw-object hw-object-toggle-other">
            <param name="default" value="."/>
            <param name="alternate" value="id(@ref, doc($global:data-root || '/register.xml'))"/>
            <param name="persistent" value="true()"/>
        </model><model predicate="@type=&#34;object&#34;" behaviour="alternate" cssClass="hw-object hw-object-toggle-first">
            <param name="default" value="."/>
            <param name="persistent" value="true()"/>
            <param name="alternate" value="id(@ref, doc($global:data-root || '/register.xml'))"/>
        </model><model predicate="@type=&#34;place&#34; and @ref=preceding-sibling::rs/@ref" behaviour="alternate" cssClass="hw-place hw-place-toggle-other">
            <param name="default" value="."/>
            <param name="alternate" value="id(@ref, doc($global:data-root || '/register.xml'))"/>
            <param name="persistent" value="true()"/>
        </model><model predicate="@type=&#34;place&#34;" behaviour="alternate" cssClass="hw-place hw-place-toggle-first">
            <param name="default" value="."/>
            <param name="alternate" value="id(@ref, doc($global:data-root || '/register.xml'))"/>
            <param name="persistent" value="true()"/>
        </model><model predicate="@ref=preceding-sibling::rs/@ref" behaviour="inline"/></elementSpec>
                <elementSpec ident="person" mode="add"><model behaviour="inline" cssClass="hw-annotation-dropdown-content">
            <param name="name" value="persName[@type='main']"/>
            <param name="birth" value="birth"/>
            <param name="death" value="death"/>
            <param name="note" value="note/string()"/>
            <param name="link" value="concat(&#34;../register.xml#&#34;, @xml:id)"/>
            <param name="dash" value="if (birth or death) then 'â' else ''"/>
            <param name="nee" value="persName[@type='nee']"/>
            <param name="alter" value="persName[@type='alternative']"/>
            <pb:template xmlns="" xml:space="preserve"><p><strong>[[name]]</strong></p>
<p>[[nee]]</p>
<p>[[alter]]</p>
<p>[[birth]] [[dash]] [[death]]</p>
<p>[[note]]</p>
<p><a href="[[link]]" class="hw-internal-link">Index</a></p>
</pb:template>
            <outputRendition xml:space="preserve">
            
            </outputRendition>
        </model></elementSpec>
                
                <elementSpec ident="closer" mode="change"><model behaviour="block">
            <outputRendition xml:space="preserve">
            margin-top: 1em; margin-left: 1em; margin-left: 1em;
            </outputRendition>
        </model></elementSpec>

                <elementSpec ident="del" mode="change"><model behaviour="inline">
            <outputRendition xml:space="preserve">
            text-decoration: line-through;
            </outputRendition>
        </model></elementSpec>

                <elementSpec ident="salute" mode="change"><model predicate="parent::closer" behaviour="inline"/><model behaviour="block"/></elementSpec>

                <elementSpec ident="lb" mode="change"><model predicate="$parameters?mode='toc'" behaviour="omit">
            <desc>Use single line headings in the table of contents.</desc>
        </model><model behaviour="break" useSourceRendition="true">
            <param name="type" value="'line'"/>
            <param name="label" value="@n"/>
        </model></elementSpec>

                <elementSpec ident="graphic" mode="change"><model behaviour="graphic">
            <param name="url" value="concat(@url, '/full/,200/0/default.jpg')"/>
        </model></elementSpec>

                <elementSpec ident="object" mode="add"><model behaviour="block" cssClass="hw-annotation-dropdown-content">
            <param name="title" value="head[@type='main']/string()"/>
            <param name="author" value="note/persName/string()"/>
            <param name="city" value="note/placeName[@type='settlement']/string()"/>
            <param name="building" value="if (note/placeName[@type='address']) then concat(': ', note/placeName[@type='address']/string()) else ''"/>
            <param name="desc" value="note/p/string()"/>
            <param name="link" value="concat(&#34;../register.xml#&#34;, @xml:id)"/>
            <param name="hwtitle" value="if (head[@type='hw']) then concat(' {HW: ', head[@type='hw']/string(), '}') else ''"/>
            <param name="date" value="note/date/string()"/>
            <param name="larger" value="if (note/term and note/objectName) then note/objectName/string() else if (note/objectName) then concat(': ', note/objectName/string()) else ''"/>
            <pb:template xmlns="" xml:space="preserve"><p><strong>[[title]]</strong></p>
<p>[[hwtitle]]</p>
<p>[[author]]</p>
<p>[[date]]</p>
<p>[[desc]]</p>
<p>[[city]][[building]][[larger]]</p>
<p><a href="[[link]]" class="hw-internal-link">Index</a></p>                  </pb:template>
        </model></elementSpec>

                <elementSpec ident="place" mode="add"><model behaviour="block" cssClass="hw-annotation-dropdown-content">
            <param name="name" value="placeName/string()"/>
            <param name="note" value="note/string()"/>
            <param name="country" value="country/string()"/>
            <param name="link" value="concat(&#34;../register.xml#&#34;, @xml:id)"/>
            <pb:template xmlns="" xml:space="preserve">
                            <p><strong>[[name]]</strong></p>
                            <p>[[country]]</p>
                            <p>[[note]]</p>
                            <p><a href="[[link]]" class="hw-internal-link">Index</a></p>
                        </pb:template>
        </model></elementSpec>

                <elementSpec ident="org" mode="add"><model behaviour="block" cssClass="hw-annotation-dropdown-content">
            <param name="name" value="orgName/string()"/>
            <param name="link" value="concat(&#34;../register.xml#&#34;, @xml:id)"/>
            <pb:template xmlns="" xml:space="preserve">
                            <p><strong>[[name]]</strong></p>
                            <p><a href="[[link]]" class="hw-internal-link">Index</a></p>
                        </pb:template>
        </model></elementSpec>

                <elementSpec ident="ptr" mode="change"><model predicate="@type=&#34;manifest&#34;" behaviour="link">
            <param name="uri" value="@target"/>
            <param name="content" value="'IIIF-Manifest'"/>
        </model><modelSequence predicate="@type='endnote-external'">
            <model behaviour="block">
                <outputRendition xml:space="preserve">
                clear: both;
                </outputRendition>
            </model>
            <model behaviour="link" cssClass="hw-internal-link">
                <param name="uri" value="concat('../resolver.html', @target)"/>
                <param name="content" value="@n"/>
                <outputRendition xml:space="preserve">
                display: block; float: left;
                </outputRendition>
            </model>
            <model behaviour="block">
                <param name="content" value="id(substring-after(@target, '#'), doc(replace(@target, '.*([sa]\d\d).*', $global:data-root || '/$1/$1-ed.xml')))/node()"/>
                <outputRendition xml:space="preserve">
                margin-left: 4em;
                </outputRendition>
            </model>
        </modelSequence><modelSequence predicate="@type='endnote-link'">
            <model behaviour="block">
                <outputRendition xml:space="preserve">
                clear: both;
                </outputRendition>
            </model>
            <model behaviour="webcomponent" cssClass="hw-internal-link">
                <param name="xml-id" value="substring-after(@target, '#')"/>
                <param name="content" value="@n"/>
                <param name="name" value="'pb-link'"/>
                <param name="emit" value="'transcription'"/>
                <outputRendition xml:space="preserve">
                display: block; float: left;
                </outputRendition>
            </model>
            <model behaviour="block">
                <param name="content" value="id(substring-after(@target, '#'), root($parameters?root))/node()"/>
                <outputRendition xml:space="preserve">
                margin-left: 4em;
                </outputRendition>
            </model>
        </modelSequence><model predicate="parent::notatedMusic" behaviour="webcomponent">
            <param name="name" value="'pb-mei'"/>
            <param name="url" value="@target"/>
        </model></elementSpec>

                <elementSpec ident="figure" mode="change"><modelSequence predicate="head">
            <desc>Images with a caption are displayed as blocks</desc>
            <model behaviour="figure" cssClass="hw-block-image">
                <param name="head" value="head"/>
                <param name="note" value="note"/>
                <param name="url" value="concat(graphic/@url, '/full/100,/0/default.jpg')"/>
                <param name="imgtitle" value="concat('Abb. ', @n, ': ', figDesc/string())"/>
                <param name="order" value="graphic/@n"/>
                <pb:template xmlns="" xml:space="preserve">
                                <span style="display: block;">
                                    <pb-facs-link order="[[order]]" emit="images" style="font-weight: normal; font-style: normal">
                                        <img src="[[url]]" title="[[imgtitle]]"/>
                                    </pb-facs-link><span style="font-size: small;">[[note]]</span>
                                </span>
                                <figcaption style="font-size: small;">[[head]]</figcaption></pb:template>
            </model>
        </modelSequence><modelSequence>
            <desc>Images without caption are displayed inline</desc>
            <model behaviour="inline">
                <param name="note" value="note"/>
                <param name="order" value="graphic/@n"/>
                <pb:template xmlns="" xml:space="preserve">
                                            <pb-facs-link order="[[order]]" emit="images" style="font-weight: normal; font-style: normal;">â¼</pb-facs-link><span>[[note]]</span>
                                        </pb:template>
                <outputRendition xml:space="preserve">
                color: var(--hw-blueish-gray);
                </outputRendition>
            </model>
            <model behaviour="block" cssClass="hw-float-image">
                <param name="url" value="concat(graphic/@url, '/full/100,/0/default.jpg')"/>
                <param name="imgtitle" value="concat('Abb. ', @n, ': ', figDesc/string())"/>
                <param name="order" value="graphic/@n"/>
                <pb:template xmlns="" xml:space="preserve"><pb-facs-link order="[[order]]" emit="images" style="font-weight: normal; font-style: normal;">
  <img src="[[url]]" title="[[imgtitle]]" width="100px"/>
</pb-facs-link></pb:template>
            </model>
        </modelSequence><model predicate="head or @rendition='simple:display'" behaviour="block"/><model behaviour="inline"/></elementSpec>

                <elementSpec ident="list" mode="change"><model predicate="@rend='hanging' and parent::div" behaviour="list">
            <outputRendition xml:space="preserve">
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            padding-left: 0;
            list-style-type: none;
                        
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            </outputRendition>
        </model><model predicate="@rend='hanging'" behaviour="list" cssClass="hw-list-indent">
            <outputRendition xml:space="preserve">
            list-style-type: none;
            </outputRendition>
        </model><model predicate="@rend='plain' and parent::div" behaviour="list">
            <outputRendition xml:space="preserve">
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            padding-left: 0;
            list-style-type: none;
                        
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            </outputRendition>
        </model><model predicate="@rend='plain'" behaviour="list" cssClass="hw-list-indent">
            <outputRendition xml:space="preserve">
            list-style-type: none;
            </outputRendition>
        </model><model predicate="@type='gloss'" behaviour="block">
            <param name="content" value="label | item"/>
            <pb:template xmlns="" xml:space="preserve"><dl style="display: grid; grid-template-columns: auto 1fr; grid-gap: 1rem;">[[content]]</dl></pb:template>
            <outputRendition xml:space="preserve">
            
            </outputRendition>
        </model><model predicate="@rendition" behaviour="list" cssClass="hw-list-indent" useSourceRendition="true">
            <param name="content" value="item"/>
        </model><model predicate="not(@rendition)" behaviour="list">
            <param name="content" value="item"/>
            <outputRendition xml:space="preserve">
            list-style-type: none;
            </outputRendition>
        </model></elementSpec>
                <elementSpec ident="label" mode="change"><model predicate="parent::list[@type='gloss']" behaviour="pass-through">
            <param name="content" value="node()"/>
            <pb:template xmlns="" xml:space="preserve"><dt>[[content]]</dt></pb:template>
        </model><model behaviour="inline"/></elementSpec>

                <elementSpec ident="unclear" mode="change"><model predicate="@n='todo'" behaviour="inline"/><model behaviour="inline">
            <outputRendition xml:space="preserve" scope="after">
            content: ' [?] ';
            </outputRendition>
        </model></elementSpec>

                <elementSpec ident="choice" mode="change"><model predicate="sic and corr" behaviour="inline" cssClass="hw-corrected">
            <param name="sic" value="sic"/>
            <param name="corr" value="corr"/>
            <param name="expl" value="seg[@type='explanation']"/>
            <pb:template xmlns="" xml:space="preserve"><pb-popover id="altref_63"><span slot="default"><span class="tei-corr1">[[corr]]</span></span><template slot="alternate"> <div class="hw-corrected-choice">[[sic]]</div><div>[[expl]]</div></template></pb-popover></pb:template>
        </model><model output="plain" predicate="sic and corr" behaviour="inline">
            <param name="content" value="corr[1]"/>
        </model><model output="plain" predicate="abbr and expan" behaviour="inline">
            <param name="content" value="expan[1]"/>
        </model><model output="plain" predicate="orig and reg" behaviour="inline">
            <param name="content" value="reg[1]"/>
        </model><model predicate="abbr and expan" behaviour="alternate">
            <param name="default" value="expan[1]"/>
            <param name="alternate" value="abbr[1]"/>
        </model><model predicate="orig and reg" behaviour="alternate">
            <param name="default" value="reg[1]"/>
            <param name="alternate" value="orig[1]"/>
        </model></elementSpec>

                <elementSpec ident="table" mode="change"><model behaviour="table">
            <outputRendition xml:space="preserve">
            
            </outputRendition>
        </model></elementSpec>

            <elementSpec ident="add" mode="change"><model behaviour="inline">
            <outputRendition xml:space="preserve">
            
            
            
            
            
            
            
            
            
            
            
            
            font-size: 50%;
vertical-align: top;
            
            
            
            
            
            
            
            
            
            
            
            
            </outputRendition>
        </model></elementSpec>
                <elementSpec ident="sic" mode="change"><model predicate="parent::choice and count(parent::*/*) gt 1" behaviour="block">
            <param name="label" value="@n"/>
            <param name="sic" value="node()"/>
            <pb:template xmlns="" xml:space="preserve"><div>[[label]]: [[sic]]</div></pb:template>
        </model><model behaviour="inline">
            <outputRendition xml:space="preserve" scope="before">
            content: '{';
            </outputRendition>
            <outputRendition xml:space="preserve" scope="after">
            content: '}';
            </outputRendition>
        </model></elementSpec>
                <elementSpec ident="date" mode="change"><model predicate="text()" behaviour="inline"/></elementSpec>
                <elementSpec ident="name" mode="change"><model behaviour="inline"/></elementSpec>
            <elementSpec ident="birth" mode="add"><model predicate="text()" behaviour="inline"/><model predicate="@when" behaviour="inline">
            <param name="content" value="@when"/>
        </model></elementSpec><elementSpec ident="death" mode="add"><model predicate="text()" behaviour="inline"/><model predicate="@when" behaviour="inline">
            <param name="content" value="@when"/>
        </model></elementSpec><elementSpec ident="persName" mode="add"><model predicate="@type=&#34;nee&#34;" behaviour="inline">
            <param name="name" value="text()"/>
            <param name="prefix" value="'geb. '"/>
            <pb:template xmlns="" xml:space="preserve"> [[prefix]] [[name]]</pb:template>
        </model><model behaviour="inline"/></elementSpec><elementSpec ident="divGen" mode="add">
        <model behaviour="block"/>
    </elementSpec></schemaSpec>
        </body>
    </text></TEI>