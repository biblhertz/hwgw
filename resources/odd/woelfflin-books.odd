<?teipublisher output="web"?><TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:pb="http://teipublisher.com/1.0" xml:lang="en"><teiHeader><fileDesc>
            <titleStmt><title>Wölfflin - books
                    
                    
                  
                  
                        
                  
                  
                   
                         
                   <desc>Specific ODD extension for the edition of Wölfflin's volumes. This configuration handles the interaction of the original texts with the comments, page images and the editorial notes. Elements with a specific behaviour are overwritten with this file.</desc></title></titleStmt>
            <publicationStmt>
                <publisher>eXistSolutions GmbH</publisher>
                <availability>
                    <licence target="https://www.gnu.org/licenses/gpl-3.0.en.html">Distributed under GNU General Public License</licence>
                    <p>Copyright 2017 <ref target="http://existsolutions.com">eXistSolutions GmbH</ref>
                    </p>
                    <p>This program is free software: you can redistribute it and/or modify
                        it under the terms of the GNU General Public License as published by
                        the Free Software Foundation, either version 3 of the License, or
                        (at your option) any later version.</p>
                    <p>This program is distributed in the hope that it will be useful,
                        but WITHOUT ANY WARRANTY; without even the implied warranty of
                        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                        GNU General Public License for more details.</p>
                </availability>
            </publicationStmt>
            <sourceDesc>
                <p>Generated by <ref target="http://tei-publisher.com">TEI Publisher</ref>
                </p>
                <p>born digital</p>
            </sourceDesc>
        </fileDesc><encodingDesc><tagsDecl><rendition source="../css/dynamic-content.css"/></tagsDecl></encodingDesc><revisionDesc>
            <change when="2020-04-27+17:00">Initial version</change>
        </revisionDesc></teiHeader><text>
        <body>
            <schemaSpec start="TEI teiCorpus" ident="woelfflin" source="woelfflin-base.odd">
            
                <elementSpec ident="div" mode="change"><modelSequence>
            <model behaviour="index">
                <param name="type" value="'toc'"/>
            </model>
            <model predicate="string-length(normalize-space(string-join(.//node() intersect (.//pb, following::pb, .//node()[last()])[1]/preceding::node(), ''))) &gt; 0 and $parameters?view='div' and preceding::pb" behaviour="inline" cssClass="hw-float-column hw-modern-pb hw-float-pb">
                <desc>In division view, if a chapter starts in the middle of the page, extract the last page break from the previous chapter. This is determined by the content between the chapter start and the first page break from there. Formally this should be identical to the definition of page break but the mark in the text is absent.</desc>
                <param name="def" value="concat(preceding::pb[1]/@ed, ': S. ', preceding::pb[1]/@n)"/>
                <param name="alt" value="concat(root($parameters?root)//teiHeader//sourceDesc/bibl[@type='printed_edition'], ', S. ', preceding::pb[1]/@n, '.')"/>
                <param name="id" value="@xml:id"/>
                <pb:template xmlns="" xml:space="preserve"><pb-popover id="altref_1" persistent="persistent"><span slot="default" id="[[id]]">[[def]]</span><template slot="alternate" id="[[id]]">
                            <div class="hw-pb-modern">[[alt]]</div></template></pb-popover></pb:template>
            </model>
            <model predicate="string-length(normalize-space(string-join(.//node() intersect (.//milestone[@unit='page'], following::milestone[@unit='page'], .//node()[last()])[1]/preceding::node(), ''))) &gt; 0 and preceding::milestone[@unit='page']" behaviour="webcomponent" cssClass="facs hw-float-column hw-original-pb hw-float-pb">
                <desc>In division view, if a chapter starts in the middle of the page, extract the last page milestone from the previous chapter. This is determined by the content between the chapter start and the first page break from there. Formally this should be identical to the definition of page milestones but the mark in the text is absent.</desc>
                <param name="name" value="'pb-facs-link'"/>
                <param name="content" value="concat(preceding::milestone[@unit='page'][1]/@ed, ': S. ', preceding::milestone[@unit='page'][1]/@n)"/>
                <param name="facs2" value="preceding::milestone[@unit='page'][1]/@facs"/>
                <param name="emit" value="'facsimile'"/>
                <param name="order" value="preceding::milestone[@unit='page'][1]/@hw_facs_order"/>
            </model>
            <model predicate="$parameters?view='div' and descendant::head[1]" behaviour="inline">
                <desc>Information for HTML metadata title. Title of chapter available.</desc>
                <param name="title" value="descendant::head[not(ancestor::figure)][1]/@n"/>
                <pb:template xmlns="" xml:space="preserve"><span class="pagetitle">[[title]]</span></pb:template>
                <outputRendition xml:space="preserve">
                display: none;
                </outputRendition>
            </model>
            <model predicate="$parameters?view='div' and not(descendant::head)" behaviour="inline">
                <desc>Information for HTML metadata title. No title available.</desc>
                <param name="title" value="form"/>
                <pb:template xmlns="" xml:space="preserve"><span class="pagetitle"/></pb:template>
                <outputRendition xml:space="preserve">
                display: none;
                </outputRendition>
            </model>
            <model behaviour="block"/>
        </modelSequence></elementSpec>
                            
                <elementSpec ident="note" mode="change"><model predicate="$parameters?mode='toc'" behaviour="omit">
            <desc>Omit notes from the table of contents</desc>
        </model><modelSequence predicate="@type='comment'">
            <desc>Anchors of the comments inside the text, synchronising with the commentary tab.</desc>
            <model behaviour="webcomponent" cssClass="hw-comment-highlight hw-editorial hw-comment-number hw-comment-number-color">
                <desc>Indicator of comment in the text block. Aligns the comments in the tab in wide views.</desc>
                <param name="name" value="'pb-highlight'"/>
                <param name="content" value="@n"/>
                <param name="key" value="@xml:id"/>
                <param name="scroll" value="true()"/>
                <param name="emit" value="'letter'"/>
                <param name="subscribe" value="'transcription'"/>
            </model>
            <model behaviour="inline" cssClass="hw-comment-popover hw-editorial hw-comment-number hw-comment-number-color">
                <desc>Popup for comments in narrow views.</desc>
                <param name="alternate" value="id(@xml:id, root($parameters?root))/p"/>
                <param name="default" value="@n"/>
                <param name="id" value="@xml:id"/>
                <pb:template xmlns="" xml:space="preserve"><pb-popover persistent="true"><span slot="default" id="[[id]]">[[default]]</span><template slot="alternate" id="[[id]]"><div class="hw-note-dropdown-content hw-editorial">
                            [[alternate]]</div></template></pb-popover></pb:template>
            </model>
        </modelSequence><modelSequence predicate="@place='foot'">
            <desc>Place footnotes at the end.</desc>
            <model behaviour="note" cssClass="hw-footnote">
                <desc>Indicator of the footnotes inside the text. Linking to the footnotes below.</desc>
                <param name="place" value="@place"/>
                <param name="label" value="@n"/>
            </model>
            <model predicate="false()" behaviour="inline" cssClass="hw-note">
                <desc>Popup for footnotes.</desc>
                <param name="alternate" value="id(@xml:id, root($parameters?root))/p"/>
                <param name="id" value="@xml:id"/>
                <pb:template xmlns="" xml:space="preserve"><pb-popover><span slot="default" id="[[id]]"/><template slot="alternate" id="[[id]]"><div class="hw-note-dropdown-content">
                            [[alternate]]</div></template></pb-popover></pb:template>
            </model>
        </modelSequence><modelSequence>
            <model behaviour="alternate">
                <param name="default" value="'?'"/>
                <param name="alternate" value="."/>
                <outputRendition xml:space="preserve">
                vertical-align: super; font-size: smaller; line-height: normal;
                </outputRendition>
            </model>
        </modelSequence></elementSpec>

                <elementSpec ident="milestone" mode="change"><modelSequence predicate="@unit='page'">
            <desc>Original page marks in Wölfflin's volumes.</desc>
            <model behaviour="inline" cssClass="hw-original-pb hw-inline-pb">
                <desc>In the text indicate the exact page break with a pipe. Show the edition year and the page number in a dropdown.</desc>
                <param name="id" value="@xml:id"/>
                <param name="milestone" value="concat(@ed, ': S. ', @n)"/>
                <pb:template xmlns="" xml:space="preserve"><pb-popover class="alternate tei-milestone1 hw-original-pb" id="altref_10"><span slot="default" id="[[id]]">| </span><template slot="alternate" id="[[id]]"><div class="hw-pb-original">[[milestone]]</div></template></pb-popover></pb:template>
            </model>
            <model behaviour="webcomponent" cssClass="facs hw-float-column hw-original-pb hw-float-pb">
                <desc>On the border next to the page break, a floating element indicates the page number and also updates the facsimile tab.</desc>
                <param name="name" value="'pb-facs-link'"/>
                <param name="content" value="concat(@ed, ': S. ', @n)"/>
                <param name="facs2" value="@facs"/>
                <param name="emit" value="'facsimile'"/>
                <param name="order2" value="count(preceding::milestone[@unit='page']) + 1"/>
                <param name="order" value="@hw_facs_order"/>
            </model>
        </modelSequence></elementSpec>
                
                <elementSpec ident="epigraph" mode="change"><model behaviour="block" useSourceRendition="true">
            <desc>Epigraph as a block.</desc>
            <outputRendition xml:space="preserve">
            margin: 1em 0;
            </outputRendition>
        </model></elementSpec>

            <elementSpec ident="titlePage" mode="change"><model behaviour="block" useSourceRendition="true"/></elementSpec>
                <elementSpec ident="docTitle" mode="change"><model behaviour="block" useSourceRendition="true">
            <desc>Document title as a block.</desc>
        </model></elementSpec>
                <elementSpec ident="figure" mode="change"><modelSequence predicate="head">
            <desc>Images with a caption are displayed as blocks</desc>
            <model behaviour="figure" cssClass="hw-block-image">
                <param name="head" value="head"/>
                <param name="note" value="note"/>
                <param name="url" value="concat(graphic/@url, '/full/100,/0/default.jpg')"/>
                <param name="imgtitle" value="concat('Abb. ', @n, ': ', figDesc/string())"/>
                <param name="order" value="graphic/@n"/>
                <pb:template xmlns="" xml:space="preserve">
                                <span style="display: block;">
                                    <pb-facs-link emit="images" order="[[order]]" style="font-weight: normal; font-style: normal">
                                        <img src="[[url]]" title="[[imgtitle]]"/>
                                    </pb-facs-link><span style="font-size: small;">[[note]]</span>
                                </span>
                                <figcaption style="font-size: small;">[[head]]</figcaption></pb:template>
            </model>
        </modelSequence><modelSequence predicate="@rend=&#34;block&#34;">
            <desc>Images marked as block</desc>
            <model behaviour="figure" cssClass="hw-block-image">
                <param name="note" value="note"/>
                <param name="url" value="concat(graphic/@url, '/full/100,/0/default.jpg')"/>
                <param name="imgtitle" value="concat('Abb. ', @n, ': ', figDesc/string())"/>
                <param name="order" value="graphic/@n"/>
                <pb:template xmlns="" xml:space="preserve">
                                <span style="display: block;">
                                    <pb-facs-link emit="images" order="[[order]]" style="font-weight: normal; font-style: normal">
                                        <img src="[[url]]" title="[[imgtitle]]"/>
                                    </pb-facs-link><span style="font-size: small;">[[note]]</span>
                                </span></pb:template>
            </model>
        </modelSequence><modelSequence>
            <desc>Images without caption are displayed inline</desc>
            <model behaviour="inline">
                <param name="note" value="note"/>
                <param name="order" value="graphic/@n"/>
                <pb:template xmlns="" xml:space="preserve">
                                <pb-facs-link order="[[order]]" emit="images" style="font-weight: normal; font-style: normal; font-size: 1.2em">◼</pb-facs-link><span>[[note]]</span>
                            </pb:template>
                <outputRendition xml:space="preserve">
                color: #D6DCDE;
                </outputRendition>
            </model>
            <model behaviour="block" cssClass="hw-float-image">
                <param name="url" value="concat(graphic/@url, '/full/100,/0/default.jpg')"/>
                <param name="imgtitle" value="concat('Abb. ', @n, ': ', normalize-space(figDesc/string()))"/>
                <param name="order" value="graphic/@n"/>
                <pb:template xmlns="" xml:space="preserve"><pb-facs-link emit="images" order="[[order]]" style="font-weight: normal; font-style: normal">
 <img src="[[url]]" title="[[imgtitle]]" width="100px"/>
</pb-facs-link></pb:template>
            </model>
        </modelSequence><model predicate="head or @rendition='simple:display'" behaviour="block"/><model behaviour="inline"/></elementSpec>
            <elementSpec ident="bibl" mode="change"><model predicate="@corresp" behaviour="pass-through"/></elementSpec>
                <elementSpec ident="byline" mode="change"><model behaviour="block"/></elementSpec>
                <elementSpec ident="docImprint" mode="change"><model behaviour="block"/></elementSpec>
                <elementSpec ident="titlePart" mode="change"><model behaviour="block" useSourceRendition="true"/></elementSpec>
                <elementSpec ident="ref" mode="change"><model predicate="starts-with(@target, 'http')" behaviour="link" cssClass="hw-external-link">
            <desc>This behaviour defines the IIIF manifest link below the images.</desc>
            <param name="uri" value="@target"/>
        </model><model predicate="@type='modern-page'" behaviour="link" cssClass="hw-internal-link">
            <desc>Link to page according to modern edition</desc>
            <param name="uri" value="concat('../resolver.html', @target)"/>
            <outputRendition xml:space="preserve">
            
            </outputRendition>
        </model><model predicate="@type='note'" behaviour="link" cssClass="hw-internal-link">
            <desc>Note in apparatus</desc>
            <param name="uri" value="concat('../resolver.html', @target)"/>
            <outputRendition xml:space="preserve">
            
            </outputRendition>
        </model><model predicate="@type='document'" behaviour="link" cssClass="hw-internal-link">
            <desc>Link to document</desc>
            <param name="uri" value="concat('../resolver.html', @target)"/>
            <outputRendition xml:space="preserve">
            
            </outputRendition>
        </model><model predicate="@type='page'" behaviour="webcomponent" cssClass="hw-internal-link">
            <desc>Base to overwrite</desc>
            <param name="name" value="'pb-link'"/>
            <param name="emit" value="'transcription'"/>
            <param name="xml-id" value="substring-after(@target, '#')"/>
            <outputRendition xml:space="preserve">
            text-decoration: none;
            </outputRendition>
        </model><model predicate="@type='chapter' and contains(@target, 'ed-ch')" behaviour="webcomponent" cssClass="hw-internal-link">
            <desc>Link to chapter in same document. To overwrite</desc>
            <param name="name" value="'pb-link'"/>
            <param name="emit" value="'transcription'"/>
            <param name="xml-id" value="substring-after(@target, '#')"/>
            <outputRendition xml:space="preserve">
            text-decoration: none;
            </outputRendition>
        </model><model predicate="@type='chapter'" behaviour="link" cssClass="hw-internal-link">
            <desc>Link to chapter anywhere</desc>
            <param name="uri" value="concat('../resolver.html', @target)"/>
            <outputRendition xml:space="preserve">
            text-decoration: none;
            </outputRendition>
        </model><model predicate="@type='comment' and contains(@target, 'ed-comment')" behaviour="webcomponent" cssClass="hw-internal-link">
            <desc>Comment in the same part. To overwrite</desc>
            <param name="name" value="'pb-link'"/>
            <param name="emit" value="'transcription'"/>
            <param name="xml-id" value="substring-after(@target, '#')"/>
            <outputRendition xml:space="preserve">
            
            </outputRendition>
        </model><model predicate="@type='comment'" behaviour="link" cssClass="hw-internal-link">
            <desc>Comment anywhere</desc>
            <param name="uri" value="concat('../resolver.html', @target)"/>
            <outputRendition xml:space="preserve">
            
            </outputRendition>
        </model><model predicate="@type='footnote'" behaviour="webcomponent" cssClass="hw-internal-link">
            <param name="name" value="'pb-link'"/>
            <param name="emit" value="'transcription'"/>
            <param name="xml-id" value="substring-after(@target, '#')"/>
            <outputRendition xml:space="preserve">
            text-decoration: none;
            </outputRendition>
        </model><model behaviour="webcomponent" cssClass="hw-internal-link">
            <param name="name" value="'pb-link'"/>
            <param name="xml-id" value="substring-after(@target, '#')"/>
            <param name="emit" value="'transcription'"/>
            <outputRendition xml:space="preserve">
            display: inline;
            </outputRendition>
        </model><model predicate="not(@target)" behaviour="inline"/><model predicate="not(text())" behaviour="link">
            <param name="content" value="null"/>
            <param name="link" value="null"/>
        </model></elementSpec>
            <elementSpec ident="divGen" mode="change"><modelSequence predicate="@type=&#34;generated-pagination&#34;">
            <model behaviour="pass-through"/>
        </modelSequence></elementSpec></schemaSpec>
        </body>
    </text></TEI>