<?teipublisher output="web"?><TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:pb="http://teipublisher.com/1.0" xml:lang="en"><teiHeader><fileDesc>
            <titleStmt><title>Wölfflin - index entry list                                                                                                                     
                 
                   
                           <desc>Specific ODD extension for the edition of Wölfflin's volumes. This configuration handles the interaction of the original texts with the comments, page images and the editorial notes. Elements with a specific behaviour are overwritten with this file.</desc></title></titleStmt>
            <publicationStmt>
                <publisher>eXistSolutions GmbH</publisher>
                <availability>
                    <licence target="https://www.gnu.org/licenses/gpl-3.0.en.html">Distributed under GNU General Public License</licence>
                    <p>Copyright 2017 <ref target="http://existsolutions.com">eXistSolutions GmbH</ref>
                    </p>
                    <p>This program is free software: you can redistribute it and/or modify
                        it under the terms of the GNU General Public License as published by
                        the Free Software Foundation, either version 3 of the License, or
                        (at your option) any later version.</p>
                    <p>This program is distributed in the hope that it will be useful,
                        but WITHOUT ANY WARRANTY; without even the implied warranty of
                        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                        GNU General Public License for more details.</p>
                </availability>
            </publicationStmt>
            <sourceDesc>
                <p>Generated by <ref target="http://tei-publisher.com">TEI Publisher</ref>
                </p>
                <p>born digital</p>
            </sourceDesc>
        </fileDesc><encodingDesc><tagsDecl><rendition source="../css/dynamic-content.css"/></tagsDecl></encodingDesc><revisionDesc>
            <change when="2020-04-27+17:00">Initial version</change>
        </revisionDesc></teiHeader><text>
        <body>
            <schemaSpec start="TEI teiCorpus" ident="woelfflin" source="woelfflin-base.odd">
            
                <elementSpec ident="div" mode="change"><model behaviour="block">
            <desc>For the commentary tab select the individual comments as content. This specification applies if the text snipped has the element 'div' as root.</desc>
            <param name="persons" value="for $n in distinct-values(.//rs[@type='person']/@ref) let $e := id($n, doc($global:data-root || '/registers/persons.xml')) order by translate($e/persName[@type='main'], &#34;ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜäöü&#34;, &#34;abcdefghijklmnopqrstuvwxyzaouaou&#34;) return $e"/>
            <param name="places" value="for $n in distinct-values(.//rs[@type='place']/@ref) let $e := id($n, doc($global:data-root || '/registers/places.xml')) order by translate($e/placeName[@type='main'], &#34;ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜäöü&#34;, &#34;abcdefghijklmnopqrstuvwxyzaouaou&#34;) return $e"/>
            <param name="organisations" value="for $n in distinct-values(.//rs[@type='organisation']/@ref) let $e := id($n, doc($global:data-root || '/registers/organizations.xml')) order by translate($e/orgName[@type='main'], &#34;ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜäöü&#34;, &#34;abcdefghijklmnopqrstuvwxyzaouaou&#34;) return $e"/>
            <param name="objects" value="for $n in distinct-values(.//rs[@type='object']/@ref) let $e := id($n, doc($global:data-root || '/registers/objects.xml')) order by translate($e/head[@type='full'], &#34;ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜäöü«»&#34;, &#34;abcdefghijklmnopqrstuvwxyzaouaou&#34;) return $e"/>
            <param name="bibliography" value="for $n in distinct-values(.//bibl/@corresp) let $e := id($n, doc($global:data-root || '/registers/bibliography.xml')) order by translate($e/title[@type='short'], &#34;ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜäöü[]&#34;, &#34;abcdefghijklmnopqrstuvwxyzaouaou&#34;) return $e"/>
            <param name="styles" value="&#34;.hw-index-entry-list div:not(:has(ul li)) {   display: none; }&#34;"/>
            <pb:template xmlns="" xml:space="preserve"><div class="hw-index-entry-list">
<style>
[[styles]]
</style>
<div>
<h3 class="hw-person">Personen</h3>
<ul style="list-style-type: none; padding: 0">[[persons]]</ul>
</div>
<div>
<h3 class="hw-organisation">Organisationen</h3>
<ul style="list-style-type: none; padding: 0">[[organisations]]</ul>
</div>
<div>
<h3 class="hw-place">Orte</h3>
<ul style="list-style-type: none; padding: 0">[[places]]</ul>
</div>
<div>
<h3 class="hw-object">Objekte</h3>
<ul style="list-style-type: none; padding: 0">[[objects]]</ul>
</div>
<div>
<h3 class="hw-bibl">Bibliographie</h3>
<ul style="list-style-type: none; padding: 0">[[bibliography]]</ul>
</div>
</div></pb:template>
        </model></elementSpec>
                            
                <elementSpec ident="note" mode="change"/>

                <elementSpec ident="body" mode="change"/>
                
                <elementSpec ident="text" mode="change"/>
            
            <elementSpec ident="bibl" mode="change"><model predicate="@type=&#34;full&#34;" behaviour="inline" cssClass="hw-annotation-dropdown-content">
            <param name="link" value="concat(&#34;../registers/bibliography.xml#&#34;, parent::bibl/@xml:id)"/>
            <param name="desc" value="node()"/>
            <pb:template xmlns="" xml:space="preserve">                            <p>[[desc]]</p>
                            <p><a href="[[link]]" class="hw-internal-link">Index</a></p>
                        </pb:template>
        </model><model predicate="parent::listBibl" behaviour="listItem" cssClass="hw-annotation-dropdown-content">
            <param name="link" value="concat(&#34;../registers/bibliography.xml#&#34;, parent::bibl/@xml:id)"/>
            <param name="desc" value="bibl[@type='full']/node()"/>
            <param name="name" value="title[@type='short']/node()"/>
            <pb:template xmlns="" xml:space="preserve">                            <p style="margin-bottom: 0;"><strong>[[name]]</strong></p>
                            <p style="margin: 0;">[[desc]]</p>
                            <p style="margin: 0;"><a href="[[link]]" class="hw-internal-link">Index</a></p></pb:template>
        </model><model predicate="@corresp" behaviour="alternate" cssClass="hw-bibl hw-bibl-toggle">
            <param name="default" value="."/>
            <param name="alternate" value="id(@corresp, doc($global:data-root || '/registers/bibliography.xml'))/bibl[@type='full']"/>
            <param name="persistent" value="true()"/>
        </model></elementSpec>
                <elementSpec ident="object" mode="change"><model behaviour="listItem" cssClass="hw-annotation-dropdown-content">
            <param name="title" value="head[@type='main']/string()"/>
            <param name="author" value="note/persName/string()"/>
            <param name="city" value="note/placeName[@type='settlement']/string()"/>
            <param name="building" value="if (note/placeName[@type='address']) then concat(': ', note/placeName[@type='address']/string()) else ''"/>
            <param name="desc" value="note/p/string()"/>
            <param name="link" value="concat(&#34;../registers/objects.xml#&#34;, @xml:id)"/>
            <param name="hwtitle" value="if (head[@type='hw']) then concat(' {HW: ', head[@type='hw']/string(), '}') else ''"/>
            <param name="date" value="note/date/string()"/>
            <param name="larger" value="if (note/term and note/objectName) then note/objectName/string() else if (note/objectName) then concat(': ', note/objectName/string()) else ''"/>
            <pb:template xmlns="" xml:space="preserve"><p style="margin-bottom: 0;"><strong>[[title]]</strong></p>
<p style="margin: 0;">[[hwtitle]]</p>
<p style="margin: 0;">[[author]]</p>
<p style="margin: 0;">[[date]]</p>
<p style="margin: 0;">[[desc]]</p>
<p style="margin: 0;">[[city]][[building]][[larger]]</p>
<p style="margin: 0;"><a href="[[link]]" class="hw-internal-link">Index</a></p>                   </pb:template>
        </model></elementSpec>
                <elementSpec ident="org" mode="change"><model behaviour="listItem" cssClass="hw-annotation-dropdown-content">
            <param name="name" value="orgName/string()"/>
            <param name="link" value="concat(&#34;../registers/organizations.xml#&#34;, @xml:id)"/>
            <pb:template xmlns="" xml:space="preserve">
                            <p style="margin-bottom: 0;"><strong>[[name]]</strong></p>
                            <p style="margin: 0;"><a href="[[link]]" class="hw-internal-link">Index</a></p>
                        </pb:template>
        </model></elementSpec>
                <elementSpec ident="person" mode="change"><model behaviour="listItem" cssClass="hw-annotation-dropdown-content">
            <param name="name" value="persName[@type='main']"/>
            <param name="birth" value="birth"/>
            <param name="death" value="death"/>
            <param name="note" value="note/string()"/>
            <param name="link" value="concat(&#34;../registers/persons.xml#&#34;, @xml:id)"/>
            <param name="dash" value="if (birth or death) then '–' else ''"/>
            <param name="nee" value="persName[@type='nee']"/>
            <param name="alter" value="persName[@type='alternative']"/>
            <pb:template xmlns="" xml:space="preserve"><p style="margin-bottom: 0;"><strong>[[name]]</strong></p>
<p style="margin: 0;">[[nee]]</p>
<p style="margin: 0;">[[alter]]</p>
<p style="margin: 0;">[[birth]] [[dash]] [[death]]</p>
<p style="margin: 0;">[[note]]</p>
<p style="margin: 0;"><a href="[[link]]" class="hw-internal-link">Index</a></p>
</pb:template>
        </model></elementSpec>
                <elementSpec ident="place" mode="change"><model behaviour="listItem" cssClass="hw-annotation-dropdown-content">
            <param name="name" value="placeName/string()"/>
            <param name="note" value="note/string()"/>
            <param name="country" value="country/string()"/>
            <param name="link" value="concat(&#34;../registers/places.xml#&#34;, @xml:id)"/>
            <pb:template xmlns="" xml:space="preserve">
                            <p style="margin-bottom: 0;"><strong>[[name]]</strong></p>
                            <p style="margin: 0;">[[country]]</p>
                            <p style="margin: 0;">[[note]]</p>
                            <p style="margin: 0;"><a href="[[link]]" class="hw-internal-link">Index</a></p>
                        </pb:template>
        </model></elementSpec>
            <elementSpec ident="divGen" mode="add"><model predicate="@type=&#34;generated-pagination&#34;" behaviour="block">
            <desc>For the commentary tab select the individual comments as content. This specification applies if the text snipped has the element 'div' as root.</desc>
            <param name="persons" value="for $n in distinct-values(.//rs[@type='person']/@ref) let $e := id($n, doc($global:data-root || '/registers/persons.xml')) order by translate($e/persName[@type='main'], &#34;ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜäöü&#34;, &#34;abcdefghijklmnopqrstuvwxyzaouaou&#34;) return $e"/>
            <param name="places" value="for $n in distinct-values(.//rs[@type='place']/@ref) let $e := id($n, doc($global:data-root || '/registers/places.xml')) order by translate($e/placeName[@type='main'], &#34;ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜäöü&#34;, &#34;abcdefghijklmnopqrstuvwxyzaouaou&#34;) return $e"/>
            <param name="organisations" value="for $n in distinct-values(.//rs[@type='organisation']/@ref) let $e := id($n, doc($global:data-root || '/registers/organizations.xml')) order by translate($e/orgName[@type='main'], &#34;ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜäöü&#34;, &#34;abcdefghijklmnopqrstuvwxyzaouaou&#34;) return $e"/>
            <param name="objects" value="for $n in distinct-values(.//rs[@type='object']/@ref) let $e := id($n, doc($global:data-root || '/registers/objects.xml')) order by translate($e/head[@type='main'], &#34;ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜäöü«»&#34;, &#34;abcdefghijklmnopqrstuvwxyzaouaou&#34;) return $e"/>
            <param name="bibliography" value="for $n in distinct-values(.//bibl/@corresp) let $e := id($n, doc($global:data-root || '/registers/bibliography.xml')) order by translate($e/title[@type='short'], &#34;ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÜäöü[]&#34;, &#34;abcdefghijklmnopqrstuvwxyzaouaou&#34;) return $e"/>
            <param name="styles" value="&#34;.hw-index-entry-list div:not(:has(ul li)) {   display: none; }&#34;"/>
            <pb:template xmlns="" xml:space="preserve"><div class="hw-index-entry-list">
<style>
[[styles]]
</style>
<div>
<h3 class="hw-person">Personen</h3>
<ul style="list-style-type: none; padding: 0">[[persons]]</ul>
</div>
<div>
<h3 class="hw-organisation">Organisationen</h3>
<ul style="list-style-type: none; padding: 0">[[organisations]]</ul>
</div>
<div>
<h3 class="hw-place">Orte</h3>
<ul style="list-style-type: none; padding: 0">[[places]]</ul>
</div>
<div>
<h3 class="hw-object">Objekte</h3>
<ul style="list-style-type: none; padding: 0">[[objects]]</ul>
</div>
<div>
<h3 class="hw-bibl">Bibliographie</h3>
<ul style="list-style-type: none; padding: 0">[[bibliography]]</ul>
</div>
</div></pb:template>
        </model></elementSpec><elementSpec ident="ab" mode="change"><model predicate="@type='collected-comments'" behaviour="omit"/><model behaviour="block" useSourceRendition="true"/></elementSpec></schemaSpec>
        </body>
    </text></TEI>