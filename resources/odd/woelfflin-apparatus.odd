<?teipublisher output="web"?><TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:pb="http://teipublisher.com/1.0" xml:lang="en"><teiHeader><fileDesc>
            <titleStmt><title>WÃ¶lfflin - apparatus</title></titleStmt>
            <publicationStmt>
                <publisher>eXistSolutions GmbH</publisher>
                <availability>
                    <licence target="https://www.gnu.org/licenses/gpl-3.0.en.html">Distributed under GNU General Public License</licence>
                    <p>Copyright 2017 <ref target="http://existsolutions.com">eXistSolutions GmbH</ref>
                    </p>
                    <p>This program is free software: you can redistribute it and/or modify
                        it under the terms of the GNU General Public License as published by
                        the Free Software Foundation, either version 3 of the License, or
                        (at your option) any later version.</p>
                    <p>This program is distributed in the hope that it will be useful,
                        but WITHOUT ANY WARRANTY; without even the implied warranty of
                        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                        GNU General Public License for more details.</p>
                </availability>
            </publicationStmt>
            <sourceDesc>
                <p>Generated by <ref target="http://tei-publisher.com">TEI Publisher</ref>
                </p>
                <p>born digital</p>
            </sourceDesc>
        </fileDesc><encodingDesc><tagsDecl><rendition source="../css/dynamic-content.css"/></tagsDecl></encodingDesc><revisionDesc>
            <change when="2020-04-27+17:00">Initial version</change>
        </revisionDesc></teiHeader><text>
        <body>
            <schemaSpec start="TEI teiCorpus" ident="woelfflin" source="woelfflin-base.odd">
            

                <elementSpec ident="div" mode="change"><modelSequence>
            <model behaviour="index">
                <param name="type" value="'toc'"/>
            </model>
            <model predicate="string-length(normalize-space(string-join(.//node() intersect (.//pb, following::pb, .//node()[last()])[1]/preceding::node(), ''))) &gt; 0 and $parameters?view='div' and preceding::pb and count(ancestor::div) &lt; 2" behaviour="inline" cssClass="hw-float-column hw-modern-pb hw-float-pb">
                <desc>In division view, if a chapter starts in the middle of the page, extract the last page break from the previous chapter. This is determined by the content between the chapter start and the first page break from there. Formally this should be identical to the definition of page break but the mark in the text is absent.</desc>
                <param name="onpage" value="concat(preceding::pb[1]/@ed, ': S. ', preceding::pb[1]/@n)"/>
                <param name="popup" value="concat(root($parameters?root)//teiHeader//sourceDesc/bibl[@type='printed_edition'], ', S. ', preceding::pb[1]/@n, '.')"/>
                <param name="id" value="@xml:id"/>
                <pb:template xmlns="" xml:space="preserve"><pb-popover id="altref_19"><span slot="default" id="[[id]]">[[onpage]]</span><template slot="alternate" id="[[id]]"><div class="hw-pb-modern">
                            [[popup]]</div></template></pb-popover></pb:template>
                <outputRendition xml:space="preserve">
                
                </outputRendition>
            </model>
            <model predicate="$parameters?view='div' and descendant::head[1]" behaviour="inline">
                <desc>HTML metadata title for div view, containing title.</desc>
                <param name="title" value="descendant::head[not(ancestor::figure)][1]/@n"/>
                <pb:template xmlns="" xml:space="preserve"><span class="pagetitle">[[title]]</span></pb:template>
                <outputRendition xml:space="preserve">
                display: none;
                </outputRendition>
            </model>
            <model predicate="$parameters?view='div' and not(descendant::head)" behaviour="inline">
                <desc>HTML metadata title for div view, empty fallback.</desc>
                <param name="title" value="form"/>
                <pb:template xmlns="" xml:space="preserve"><span class="pagetitle"/></pb:template>
                <outputRendition xml:space="preserve">
                display: none;
                </outputRendition>
            </model>
            <model behaviour="block"/>
        </modelSequence></elementSpec>
                    
                <elementSpec ident="note" mode="change"><modelSequence predicate="@type='note'">
            <desc>Notes to the editiorial explanations</desc>
            <model behaviour="webcomponent" cssClass="hw-comment-highlight hw-editorial hw-comment-number hw-comment-number-color">
                <param name="name" value="'pb-highlight'"/>
                <param name="content" value="@n"/>
                <param name="key" value="@xml:id"/>
                <param name="scroll" value="true()"/>
                <param name="emit" value="'letter'"/>
                <param name="subscribe" value="'transcription'"/>
                <outputRendition xml:space="preserve">
                
                </outputRendition>
            </model>
            <model behaviour="inline" cssClass="hw-comment-popover hw-editorial hw-comment-number hw-comment-number-color">
                <param name="alternate" value="id(@xml:id, root($parameters?root))/p"/>
                <param name="default" value="@n"/>
                <param name="id" value="@xml:id"/>
                <pb:template xmlns="" xml:space="preserve"><pb-popover persistent="true"><span slot="default" id="[[id]]">[[default]]</span><template slot="alternate" id="[[id]]"><div class="hw-note-dropdown-content">
                            [[alternate]]</div></template></pb-popover></pb:template>
                <outputRendition xml:space="preserve">
                
                </outputRendition>
            </model>
        </modelSequence><modelSequence predicate="@type='comment'">
            <desc>Anchors of the comments inside the text, synchronising with the commentary tab.</desc>
            <model behaviour="webcomponent" cssClass="hw-comment-highlight hw-editorial hw-comment-number hw-comment-number-color">
                <param name="name" value="'pb-highlight'"/>
                <param name="content" value="@n"/>
                <param name="key" value="@xml:id"/>
                <param name="scroll" value="true()"/>
                <param name="emit" value="'letter'"/>
                <param name="subscribe" value="'transcription'"/>
                <outputRendition xml:space="preserve">
                
                </outputRendition>
            </model>
            <model behaviour="inline" cssClass="hw-comment-popover hw-editorial hw-comment-number hw-comment-number-color">
                <param name="alternate" value="id(@xml:id, root($parameters?root))/p"/>
                <param name="default" value="@n"/>
                <param name="id" value="@xml:id"/>
                <pb:template xmlns="" xml:space="preserve"><pb-popover persistent="true"><span slot="default" id="[[id]]">[[default]]</span><template slot="alternate" id="[[id]]"><div class="hw-note-dropdown-content">
                            [[alternate]]</div></template></pb-popover></pb:template>
                <outputRendition xml:space="preserve">
                
                </outputRendition>
            </model>
        </modelSequence><model predicate="@place='foot'" behaviour="note" cssClass="hw-primary">
            <param name="place" value="@place"/>
            <param name="label" value="@n"/>
        </model><model behaviour="alternate">
            <param name="default" value="@n"/>
            <param name="alternate" value="p"/>
        </model></elementSpec>
            
                <elementSpec ident="floatingText" mode="change"><model behaviour="block" cssClass="hw-primary"/></elementSpec>

                <elementSpec ident="ab" mode="change"><modelSequence predicate="parent::item/parent::list[@rend='hanging']">
            <model behaviour="inline">
                <pb:template xmlns="" xml:space="preserve"><br/></pb:template>
            </model>
            <model behaviour="inline"/>
        </modelSequence><model behaviour="block" useSourceRendition="true"/></elementSpec>

            <elementSpec ident="head" mode="change"><model predicate="$parameters?mode='toc'" behaviour="inline">
            <param name="content" value="replace(string-join(.//text()[not(parent::ref)][not(ancestor::note)]), '^(.*?)[^\w]*$', '$1')"/>
        </model><model predicate="$parameters?header='short'" behaviour="inline">
            <param name="content" value="replace(string-join(.//text()[not(parent::ref)]), '^(.*?)[^\w]*$', '$1')"/>
        </model><model predicate="parent::figure" behaviour="inline"/><model predicate="parent::table" behaviour="block">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model><model predicate="parent::lg" behaviour="block">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model><model predicate="parent::list" behaviour="block">
            <outputRendition xml:space="preserve">
            font-weight: bold;
            </outputRendition>
        </model><model predicate="parent::div" behaviour="heading" cssClass="hw-appHead" useSourceRendition="true">
            <param name="level" value="count(ancestor::div)"/>
        </model><model predicate="parent::div3" behaviour="heading">
            <param name="level" value="3"/>
        </model><model behaviour="block"/></elementSpec>
            <elementSpec ident="bibl" mode="change"><model predicate="@corresp" behaviour="pass-through"/></elementSpec>
                <elementSpec ident="ref" mode="change"><model predicate="starts-with(@target, 'http')" behaviour="link" cssClass="hw-external-link">
            <desc>This behaviour defines the IIIF manifest link below the images.</desc>
            <param name="uri" value="@target"/>
        </model><model predicate="@type='modern-page'" behaviour="link" cssClass="hw-internal-link">
            <desc>Link to page according to modern edition</desc>
            <param name="uri" value="concat('../resolver.html', @target)"/>
            <outputRendition xml:space="preserve">
            
            </outputRendition>
        </model><model predicate="@type='note'" behaviour="webcomponent" cssClass="hw-internal-link">
            <desc>Note in apparatus</desc>
            <param name="name" value="'pb-link'"/>
            <param name="emit" value="'transcription'"/>
            <param name="xml-id" value="substring-after(@target, '#')"/>
            <outputRendition xml:space="preserve">
            
            </outputRendition>
        </model><model predicate="@type='document'" behaviour="webcomponent" cssClass="hw-internal-link">
            <desc>Link to document</desc>
            <param name="name" value="'pb-link'"/>
            <param name="emit" value="'transcription'"/>
            <param name="xml-id" value="substring-after(@target, '#')"/>
            <outputRendition xml:space="preserve">
            
            </outputRendition>
        </model><model predicate="@type='page'" behaviour="link" cssClass="hw-internal-link">
            <desc>Base to overwrite</desc>
            <param name="uri" value="concat('../resolver.html', @target)"/>
        </model><model predicate="@type='chapter' and contains(@target, 'app-ch')" behaviour="webcomponent" cssClass="hw-internal-link">
            <desc>Link to chapter in same document. To overwrite</desc>
            <param name="name" value="'pb-link'"/>
            <param name="emit" value="'transcription'"/>
            <param name="xml-id" value="substring-after(@target, '#')"/>
            <outputRendition xml:space="preserve">
            
            </outputRendition>
        </model><model predicate="@type='chapter'" behaviour="link" cssClass="hw-internal-link">
            <desc>Link to chapter anywhere</desc>
            <param name="uri" value="concat('../resolver.html', @target)"/>
            <outputRendition xml:space="preserve">
            
            </outputRendition>
        </model><model predicate="@type='comment' and contains(@target, 'doc-comment')" behaviour="webcomponent" cssClass="hw-internal-link">
            <desc>Comment in the same part. To overwrite</desc>
            <param name="name" value="'pb-link'"/>
            <param name="emit" value="'transcription'"/>
            <param name="xml-id" value="substring-after(@target, '#')"/>
            <outputRendition xml:space="preserve">
            
            </outputRendition>
        </model><model predicate="@type='comment'" behaviour="link" cssClass="hw-internal-link">
            <desc>Comment anywhere</desc>
            <param name="uri" value="concat('../resolver.html', @target)"/>
            <outputRendition xml:space="preserve">
            
            </outputRendition>
        </model><model predicate="@type='footnote'" behaviour="webcomponent" cssClass="hw-internal-link">
            <param name="name" value="'pb-link'"/>
            <param name="emit" value="'transcription'"/>
            <param name="xml-id" value="substring-after(@target, '#')"/>
            <outputRendition xml:space="preserve">
            
            </outputRendition>
        </model><model behaviour="webcomponent" cssClass="hw-internal-link">
            <param name="name" value="'pb-link'"/>
            <param name="xml-id" value="substring-after(@target, '#')"/>
            <param name="emit" value="'transcription'"/>
            <outputRendition xml:space="preserve">
            display: inline;
            </outputRendition>
        </model><model predicate="not(@target)" behaviour="inline"/><model predicate="not(text())" behaviour="link">
            <param name="content" value="null"/>
            <param name="link" value="null"/>
        </model></elementSpec>
            <elementSpec ident="divGen" mode="add"><modelSequence predicate="@type=&#34;generated-pagination&#34;">
            <model behaviour="pass-through"/>
        </modelSequence></elementSpec></schemaSpec>
        </body>
    </text></TEI>