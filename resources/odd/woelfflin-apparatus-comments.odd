<?teipublisher output="web"?><TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:pb="http://teipublisher.com/1.0" xml:lang="en"><teiHeader><fileDesc>
            <titleStmt><title>WÃ¶lfflin - apparatus: comments</title></titleStmt>
            <publicationStmt>
                <publisher>eXistSolutions GmbH</publisher>
                <availability>
                    <licence target="https://www.gnu.org/licenses/gpl-3.0.en.html">Distributed under GNU General Public License</licence>
                    <p>Copyright 2017 <ref target="http://existsolutions.com">eXistSolutions GmbH</ref>
                    </p>
                    <p>This program is free software: you can redistribute it and/or modify
                        it under the terms of the GNU General Public License as published by
                        the Free Software Foundation, either version 3 of the License, or
                        (at your option) any later version.</p>
                    <p>This program is distributed in the hope that it will be useful,
                        but WITHOUT ANY WARRANTY; without even the implied warranty of
                        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                        GNU General Public License for more details.</p>
                </availability>
            </publicationStmt>
            <sourceDesc>
                <p>Generated by <ref target="http://tei-publisher.com">TEI Publisher</ref>
                </p>
                <p>born digital</p>
            </sourceDesc>
        </fileDesc><encodingDesc><tagsDecl><rendition source="../css/dynamic-content.css"/></tagsDecl></encodingDesc><revisionDesc>
            <change when="2020-04-27+17:00">Initial version</change>
        </revisionDesc></teiHeader><text>
        <body>
            <schemaSpec start="TEI teiCorpus" ident="woelfflin" source="woelfflin-base.odd">
            
                <elementSpec ident="body" mode="change"><model behaviour="section">
            <desc>Query all comments. Unsure if needed.</desc>
            <param name="content" value="for $n in .//note[@type='comment'] group by $ref := number($n/@n) order by $ref return $n[1]"/>
        </model></elementSpec>
                            
                <elementSpec ident="div" mode="change"><model behaviour="section">
            <desc>Query all comments and notes for the tab view.</desc>
            <param name="content" value="for $n in .//note[@type='comment' or @type='note'] group by $ref := number($n/@n) order by $ref return $n[1]"/>
        </model></elementSpec>
                    
                <elementSpec ident="text" mode="change"><model behaviour="section">
            <desc>Query all comments. Unsure if needed.</desc>
            <param name="content" value="for $n in .//anchor[@type='comment'] group by $ref := number($n/@n) order by $ref return $n[1]"/>
        </model></elementSpec>

                <elementSpec ident="note" mode="change"><model predicate="@type='note'" behaviour="inline" cssClass="hw-editorial">
            <desc>Formatting the notes for the apparatus in the tab.</desc>
            <param name="key" value="@xml:id"/>
            <param name="comment" value="p"/>
            <param name="number" value="@n"/>
            <pb:template xmlns="" xml:space="preserve"><pb-highlight key="[[key]]" subscribe="letter" emit="facets">
  <article class="hw-comment-box">
    <h5 class="hw-comment-number-tab hw-comment-number-color">[[number]]</h5>
    <div class="hw-comment-content">[[comment]]</div>
  </article>
</pb-highlight>
                        </pb:template>
        </model><model predicate="@type='comment'" behaviour="block" cssClass="hw-editorial">
            <desc>Formatting of the comments for documents in the commentary tab</desc>
            <param name="key" value="@xml:id"/>
            <param name="comment" value="p"/>
            <param name="number" value="@n"/>
            <pb:template xmlns="" xml:space="preserve"><pb-highlight key="[[key]]" subscribe="letter" emit="facets">
  <article class="hw-comment-box">
    <h5 class="hw-comment-number-tab hw-comment-number-color">[[number]]</h5>
    <div class="hw-comment-content">[[comment]]</div>
  </article>
</pb-highlight>
                        </pb:template>
        </model><model behaviour="alternate">
            <param name="default" value="@n"/>
            <param name="alternate" value="p"/>
        </model></elementSpec>
            
            <elementSpec ident="ref" mode="change"><model predicate="starts-with(@target, 'http')" behaviour="link" cssClass="hw-external-link">
            <desc>This behaviour defines the IIIF manifest link below the images.</desc>
            <param name="uri" value="@target"/>
        </model><model predicate="@type='modern-page'" behaviour="link" cssClass="hw-internal-link">
            <desc>Link to page according to modern edition</desc>
            <param name="uri" value="concat('../resolver.html', @target)"/>
            <outputRendition xml:space="preserve">
            
            </outputRendition>
        </model><model predicate="@type='note'" behaviour="webcomponent" cssClass="hw-internal-link">
            <desc>Note in apparatus</desc>
            <param name="name" value="'pb-link'"/>
            <param name="emit" value="'transcription'"/>
            <param name="xml-id" value="substring-after(@target, '#')"/>
            <outputRendition xml:space="preserve">
            
            </outputRendition>
        </model><model predicate="@type='document'" behaviour="webcomponent" cssClass="hw-internal-link">
            <desc>Link to document</desc>
            <param name="name" value="'pb-link'"/>
            <param name="emit" value="'transcription'"/>
            <param name="xml-id" value="substring-after(@target, '#')"/>
            <outputRendition xml:space="preserve">
            
            </outputRendition>
        </model><model predicate="@type='page'" behaviour="link" cssClass="hw-internal-link">
            <desc>Base to overwrite</desc>
            <param name="uri" value="concat('../resolver.html', @target)"/>
        </model><model predicate="@type='chapter' and contains(@target, 'app-ch')" behaviour="webcomponent" cssClass="hw-internal-link">
            <desc>Link to chapter in same document. To overwrite</desc>
            <param name="name" value="'pb-link'"/>
            <param name="emit" value="'transcription'"/>
            <param name="xml-id" value="substring-after(@target, '#')"/>
            <outputRendition xml:space="preserve">
            
            </outputRendition>
        </model><model predicate="@type='chapter'" behaviour="link" cssClass="hw-internal-link">
            <desc>Link to chapter anywhere</desc>
            <param name="uri" value="concat('../resolver.html', @target)"/>
            <outputRendition xml:space="preserve">
            
            </outputRendition>
        </model><model predicate="@type='comment' and contains(@target, 'doc-comment')" behaviour="webcomponent" cssClass="hw-internal-link">
            <desc>Comment in the same part. To overwrite</desc>
            <param name="name" value="'pb-link'"/>
            <param name="emit" value="'transcription'"/>
            <param name="xml-id" value="substring-after(@target, '#')"/>
            <outputRendition xml:space="preserve">
            
            </outputRendition>
        </model><model predicate="@type='comment'" behaviour="link" cssClass="hw-internal-link">
            <desc>Comment anywhere</desc>
            <param name="uri" value="concat('../resolver.html', @target)"/>
            <outputRendition xml:space="preserve">
            
            </outputRendition>
        </model><model predicate="@type='footnote'" behaviour="webcomponent" cssClass="hw-internal-link">
            <param name="name" value="'pb-link'"/>
            <param name="emit" value="'transcription'"/>
            <param name="xml-id" value="substring-after(@target, '#')"/>
            <outputRendition xml:space="preserve">
            
            </outputRendition>
        </model><model behaviour="webcomponent" cssClass="hw-internal-link">
            <param name="name" value="'pb-link'"/>
            <param name="xml-id" value="substring-after(@target, '#')"/>
            <param name="emit" value="'transcription'"/>
            <outputRendition xml:space="preserve">
            display: inline;
            </outputRendition>
        </model><model predicate="not(@target)" behaviour="inline"/><model predicate="not(text())" behaviour="link">
            <param name="content" value="null"/>
            <param name="link" value="null"/>
        </model></elementSpec>
            <elementSpec ident="divGen" mode="add"><model predicate="@type=&#34;generated-pagination&#34;" behaviour="section">
            <desc>For the commentary tab select the individual comments as content. This specification applies if the text snippet was generated by pagination.</desc>
            <param name="content" value="for $n in .//note group by $ref := number($n/@n) order by $ref return $n[1]"/>
        </model></elementSpec><elementSpec ident="ab" mode="change"><model predicate="@type='collected-comments'" behaviour="omit"/><model behaviour="block" useSourceRendition="true"/></elementSpec></schemaSpec>
        </body>
    </text></TEI>